#!/usr/bin/env python3
# vim:tw=88
#------------------------------------------------------------------------------
# User: 00riddle00 (Tomas Giedraitis)
# Date: 2025-05-04 23:10:04 EEST
# Path: ~/.local/bin/mutt-notmuch-py
# URL:  https://github.com/00riddle00/dotfiles
#------------------------------------------------------------------------------
# Author: Jessey White-Cinis (https://github.com/jcinis)
# Orig. URL: https://raw.githubusercontent.com/vivien/i3blocks-contrib/9a54f380a358093dbd2698e45f5ee2ac263a0469/dunst/dunst
# Orig. URL/File Retrieval: 2024-09-29 22:12:57 EEST
#------------------------------------------------------------------------------
#*
# Mute / unmute Dunst notifications.
#
# ----------------------------------------
# Description by the author:
# ----------------------------------------
# A do-not-disturb button for muting Dunst notifications in i3 using i3blocks
#
# Mute is handled by passing 'DUNST_COMMAND_PAUSE' and 'DUNST_COMMAND_RESUME' to the
# notify-send script and the 'DUNST_MUTE' environment variable is set to keep track of
# the toggle.
# ----------------------------------------
#**

#* USAGE:
#*   The script is not supposed to be run directly, but rather by i3blocks status
#*   bar manager.
#**
__author__ = "Jessey White-Cinis <j@cin.is>"
__copyright__ = "Copyright (c) 2019 Jessey White-Cinis"
__license__ = "MIT"
__version__ = "1.1.0"

import json
import os
import subprocess


def mute_on():
    """Turns off dunst notifications"""
    subprocess.run(["dunstctl", "set-paused", "true"], check=True)
    return {
        "full_text": "<span font='Font Awesome 5 Free Solid' "
        "color='#1793D1'>\uf1f6</span>",
        "DUNST_MUTE": "on",
    }


def mute_off():
    """Turns back on dunst notifications"""
    subprocess.run(["dunstctl", "set-paused", "false"], check=True)
    return {
        "full_text": "<span font='Font Awesome 5 Free Solid' "
        "color='#1793D1'>\uf0f3</span>",
        "DUNST_MUTE": "off",
    }


def clicked():
    """Returns True if the button was clicked"""
    # The ${BLOCK_BUTTON} value is set by i3blocks, its values correspond to these mouse
    # actions:
    #   1 - left click
    #   2 - middle click
    #   3 - right click
    button = "BLOCK_BUTTON" in os.environ and os.environ["BLOCK_BUTTON"]
    return bool(button)


def muted():
    """Returns True if Dunst is muted"""
    cmd = ["dunstctl", "is-paused"]
    proc = subprocess.Popen(cmd, stdout=subprocess.PIPE)
    output = proc.communicate()[0]
    return "true" == output.strip().decode("UTF-8")


if clicked():
    # toggle button click to turn mute on and off
    if muted():
        RTN = mute_off()
    else:
        RTN = mute_on()

else:
    # Set default state using 'DUNST_MUTE' environment variable
    if muted():
        RTN = mute_on()
    else:
        RTN = mute_off()

print(json.dumps(RTN))
