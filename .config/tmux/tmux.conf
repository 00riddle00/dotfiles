#------------------------------------------------------------------------------
# Author: 00riddle00 (Tomas Giedraitis)
# Date:   2024-07-30 16:11:25 EEST
# Path:   ~/.config/tmux/tmux.conf
# URL:    https://github.com/00riddle00/dotfiles
#------------------------------------------------------------------------------

# ========================================
#  General
# ========================================

# See `bind-key [-nr]` in `man tmux`

# Vi mode in tmux
set-window-option -g mode-keys vi

# Unbind C-b as prefix (i.e. do not use it) and other keys
unbind C-b
unbind ":"
unbind m
unbind n
unbind q

# Set prefix to be '`'
set-option -g prefix `

# Set prefix key
#   P.S. Double pressed tmux prefix key sends commands to the inner tmux
#   session
bind ` send-prefix

# Bind 'o' to tmux command prompt
bind "o" command-prompt

# Bind to reload config
#   "unbind-key -a" is used since sometimes some lines need to be commented out
#   in this config temporarily (e.g. alternate keybindings for selecting panes)
bind-key r unbind-key -a \; \
  source-file $XDG_CONFIG_HOME/tmux/tmux.conf \; \
  display-message "Config reloaded"

# Bind 'b' to show tmux buffers
bind-key b list-buffers

# Set the number of scrollback buffer lines
set -g history-limit 100000

# Disable delay for escape key press
set -sg escape-time 0

# Use 256 colors
set -g default-terminal "screen-256color"

# ========================================
#  Copy mode (entered with prefix + "[")
# ========================================

bind-key -T copy-mode-vi v                 send-keys -X begin-selection
# Visual block mode (i.e. rectangle select) also applies while copying with
# MouseDragEnd1Pane - start selecting with the mouse and then press "C-v".
bind-key -T copy-mode-vi C-v               send-keys -X rectangle-toggle
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel \
  'xclip -in -selection clipboard'
bind-key -T copy-mode-vi Enter             send-keys -X copy-selection-and-cancel
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel \
  'xclip -in -selection clipboard'

# Move x clipboard into tmux paste buffer
#bind C-p run "tmux set-buffer \"$(xclip -o)\"
# Move x clipboard into tmux paste buffer and paste it
#bind C-p run "tmux set-buffer \"$(xclip -o)\"; tmux paste-buffer"
# Move tmux paste buffer into x clipboard
#bind C-y run "tmux save-buffer - | xclip -i"
# Show tmux paste buffer
#bind y run-shell "tmux show-buffer | xclip -sel clip -i" \;

# ========================================
#  Window switching
# ========================================

# Switch windows
bind h previous-window
bind l next-window

# Use 1-indexed windows
set -g base-index 1

# Make current window the first window
bind-key t move-window -t 1

# Select window by its number or name
bind p command-prompt 'select-window -t %%'

# Select first window
bind-key 0 select-window -t 1

# Select last window
bind-key ';' select-window -l

# ========================================
#  Window naming
# ========================================

# Rename current tmux window
bind e command-prompt 'rename-window %%'

set-option -g set-titles on
# Automatically set window title
set-window-option -g automatic-rename on
# Window title string (uses statusbar variables)
set -g set-titles-string '#T'

# ========================================
#  Window ordering
# ========================================

bind-key -r , swap-window -t -1\; select-window -t -1
bind-key -r . swap-window -t +1\; select-window -t +1
bind-key -r < swap-window -t -1\; select-window -t -1
bind-key -r > swap-window -t +1\; select-window -t +1

# ========================================
#  Window splitting
# ========================================

# Make new window/pane commands inherit the CWD:
#   on new window:
bind c new-window -c "#{pane_current_path}"
#   on vertical window split:
bind "'" split-window -h -c "#{pane_current_path}"
#   on horizontal window split:
bind - split-window -v -c "#{pane_current_path}"

# ========================================
#  Pane switching & resizing
# ========================================

# Show pane numbers
bind-key n 'display-panes'

# Select pane by its number
#bind m command-prompt 'select-pane -t %%'

# Smart pane switching with awareness of Vim splits
#   See: https://github.com/christoomey/vim-tmux-navigator
is_vim='echo "#{pane_current_command}" | \
  rg -iq "(^|\/)g?(view|n?vim?x?)(diff)?$"'
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"

# Alternate bindings for switching panes. Useful when running tmux inside tmux
# (e.g. when starting a terminal from inside vim, or when using a VM, a docker
# container or a remote machine).
# These bindings should be left commented out on the "parent" tmux instance and
# uncommented in the "child" tmux instance.
#bind-key -n M-h "select-pane -L"
#bind-key -n M-j "select-pane -D"
#bind-key -n M-k "select-pane -U"
#bind-key -n M-l "select-pane -R"

# Resize current pane:
#   by a iota:
bind-key -n M-Down  resize-pane -D  1
bind-key -n M-Up    resize-pane -U  1
bind-key -n M-Left  resize-pane -L  1
bind-key -n M-Right resize-pane -R  1
#   by a considerable amount:
bind-key -n S-Down  resize-pane -D 10
bind-key -n S-Up    resize-pane -U 10
bind-key -n S-Left  resize-pane -L 10
bind-key -n S-Right resize-pane -R 10

# Maximize current pane
bind m resize-pane -Z

# ========================================
#  Appearance
# ========================================
# ^---- Kudos to jasonwryan (Jason Ryan) (https://jasonwryan.com)
#       for the appearance settings!

set -g status-style bg=black

# Statusbar if tmux runs in X
set -g status-style bright
set -g status-right-length 50
set -g status-left-length  50

# Default window title colors
set-window-option -g window-status-style bg=default,fg=colour245,bright

# Active window title colours
set-window-option -g window-status-current-style bg=default,fg=colour169,dim

# Command/message line colors
set -g message-style         fg=white,bg=black
set -g message-command-style fg=white,bg=black

set -g status-style bright
set -g status-right-length 40
set -g status-left-length  50

set -g status-left \
"#[fg=blue]#H #[fg=black,bright]• #[fg=green]#(uname -r) \
#[fg=black,bright]• #[fg=yellow]\
#(awk \'{print $1/1000}\' /sys/class/thermal/thermal_zone0/temp)°C \
#[fg=default]"

set -g status-right \
"#[fg=cyan]#(awkuptime) #[fg=black,bright]• #[fg=magenta]\
#(awk \'{print $1,$2,$3}\' /proc/loadavg) #[fg=black,bright]• \
#[fg=cyan]#{battery_percentage}"

# ========================================
#  Mouse
# ========================================

# Use mouse to:
#   * scroll the way into copy mode
#   * click on a pane to activate it
#   * select windows
#   * resize panes
set -g mouse off

# ========================================
#  Plugins
# ========================================

# List plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-battery'

# Initialize TMUX plugin manager (needs to be at the very bottom of tmux.conf)
run -b '/usr/share/tmux-plugin-manager/tpm'
